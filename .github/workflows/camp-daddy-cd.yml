name: Camp Daddy CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    name: 우분투 설치
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v2

      - name: .env 파일 생성
        run: |
          jq -r 'to_entries | map(select(.key != "AWS_SSH_KEY") | "\(.key)=\(.value|tostring)") | .[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Gradle 빌드 & 테스트 실행
        run: ./gradlew build test

      - name: Docker 빌드 & 푸쉬
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      - name: EC2 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps
            sudo docker stop ${{ secrets.DOCKER_REPO }} && docker rm ${{ secrets.DOCKER_REPO }} && docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            sudo docker run -d -p ${{ secrets.SERVER_PORT }}:${{ secrets.SERVER_PORT }} --name ${{ secrets.DOCKER_REPO }} --restart always ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            sudo docker image prune -f

      - name: 슬랙 Alarm 전송
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: CD 결과 알림
          fields: message, commit, author, ref, workflow, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
            
